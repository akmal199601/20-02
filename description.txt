					Многопоточность
Одним из ключевых аспектов в современном программировании является многопоточность. 
Ключевым понятием при работе с многоопоточностью является поток. 
Поток предствляет некоторую часть кода программы. При выполнении программы каждому потоку 
выделяется определенный квант времени. И при помощи многопоточности мы можем выделить в 
приложении несколько потоков, которые будут выполнять различные задачи одновременно. 
Если у нас, допустим, графическое приложение, которое посылает запрос к какому-нибудь серверу 
или считывает и обрабатывает огромный файл, то без многопоточности у нас бы блокировался 
графический интерфейс на время выполнения задачи. 
А благодаря потокам мы можем выделить отправку запроса или любую другую задачу, 
которая может долго обрабатываться, в отдельный поток. 
Поэтому, к примеру, клиент-серверные приложения (и не только они) практически не мыслимы без многопоточности.

				Асинхронное программирование

Асинхронное программирование (АП) - это форма параллельного программирования, которая позволяет структурной 
единице системы работать отдельно от основного потока приложения.
Асинхронное программирование успешно решает множество задач. 
Одна из самых важных – доступность интерфейса пользователя.
Асинхронных операций в программе может быть несколько. 
Чтобы разобраться с многочисленными событиями, существует специальная очередь. 
Она работает по принципу "первый пришел – первый ушел".

			Параллельное программирование

Параллельные вычисления — способ организации компьютерных вычислений, при котором программы разрабатываются 
как набор взаимодействующих вычислительных процессов, работающих параллельно (одновременно).
Иными словами паралленьное програмирование это когда 2 потока работают вместе паралельнно.
Параллельное программирование очень похоже на Асинхронное программирование в некоторых моментах 

